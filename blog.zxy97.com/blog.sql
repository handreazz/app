/*
Navicat MySQL Data Transfer

Source Server         : 118.24.178.170_3306
Source Server Version : 50636
Source Host           : 118.24.178.170:3306
Source Database       : blog

Target Server Type    : MYSQL
Target Server Version : 50636
File Encoding         : 65001

Date: 2018-11-29 00:24:10
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for `article`
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(40) NOT NULL COMMENT '标题',
  `type` varchar(20) DEFAULT '未分类' COMMENT '文章类别',
  `html` text COMMENT '文章HTML内容',
  `num_read` int(10) unsigned DEFAULT NULL COMMENT '文章阅读数',
  `num_comment` int(10) unsigned DEFAULT NULL COMMENT '文章评论数',
  `author_username` varchar(40) NOT NULL COMMENT '文章作者的用户名',
  `markdown` text NOT NULL COMMENT '文章Markdown内容',
  `gmt_create` char(19) NOT NULL COMMENT '创建时间',
  `gmt_update` char(19) DEFAULT NULL COMMENT '修改时间',
  `gmt_delete` varchar(19) DEFAULT NULL COMMENT '删除时间',
  `auth` char(1) DEFAULT '0' COMMENT '权限。0表示公开，1表示已登录用户可见，其他表示仅自己可见',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8 COMMENT='文章';

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES ('1', '第一篇文章', 'HTML', null, null, null, 'mamingyue', '# 第一篇文章\r\n\r\n[TOC]\r\n\r\n[TOCM]\r\n\r\n## 1 语法\r\n`行内代码`\r\n\r\n```java\r\npublic static void main(String[] args){\r\n	System.out.println(\"MarkDown！\");\r\n}\r\n```\r\n\r\n## 2 LaTex\r\n\r\n$$\r\nf(a,x)=x^2_m = a+S^e\r\n$$\r\n\r\n$$\r\n\\sum_{i=1}^n{i=1}\r\n$$', '2018-11-15 15:28:49', '2018-11-15 15:28:49', null, '0');
INSERT INTO `article` VALUES ('2', 'CSS', 'CSS', null, null, null, 'mamingyue', 'CSSS', '2018-11-15 15:29:14', '2018-11-15 15:29:14', null, '0');
INSERT INTO `article` VALUES ('3', 'CSS2', 'CSS', null, null, null, 'mamingyue', 'CSS2', '2018-11-15 15:29:27', '2018-11-15 15:30:00', null, '0');
INSERT INTO `article` VALUES ('4', '1. 两数之和', '编程谜题', '', null, null, 'zhaoxuyang', '# 两数之和2\r\n\r\n[TOC]\r\n\r\n## 题目********************\r\n\r\n给定整数的一个数组，1. 1. 1. 找出这样的两个数，它们的和等于一个特定的目标数字（target）。\r\n\r\ntwoSum 函数应该返回两个数的索引，这两个数相加等于目标数字，其中 index1 必须小于 index2 。\r\n\r\n请注意，返回的结果（index1 和 index2）不是基于0的。\r\n\r\n可以假设对于每一个输入来说，都只有一个解决方案。\r\n\r\n> 输入：number={2,7,11,15}，target=9\r\n> 输出：index1=1, index2=2\r\n\r\n## 解析\r\n\r\n采用暴力搜索法，是出题者不愿意看到的，其时间复杂度为：$$O(n^2)$$\r\n\r\n### 解法一，哈希方法\r\n从左往右扫描一遍，将整数及其索引存到map中。然后再扫描一遍，对每一个整数K，搜索target-K在map中是否存在即可。如果存在，则输出K及target-K的下标。时间复杂度为$$O(n)$$\r\n\r\n```\r\nvevtor<int> twoSum(vector<int>&numbers, int target) {\r\n	map<int, int> mapping;\r\n	vector<int> result;\r\n	for (int i = 0; i < numbers.size(); i++) {\r\n		mapping[number[i]] = i;\r\n	}\r\n	for (int i = 0; i < numbers.size(); i++) {\r\n		int searched = target - numbers[i];\r\n		if (mapping.find(serached) != mapping.end() && i != mapping[searched]) {\r\n			result.push_back(i + 1);\r\n			result.push_back(mapping[searched] + 1);\r\n			break;\r\n		}\r\n	}\r\n	return result;\r\n}\r\n```\r\n\r\n\r\n', '2018-11-15 17:37:51', '2018-11-28 19:26:55', null, '0');
INSERT INTO `article` VALUES ('5', '毕设', 'MYDESIGN', null, null, null, '2621898620', '# 苹果农技知识构建方法研究与实现\r\n\r\n[TOC]\r\n\r\n[TOCM]\r\n\r\n## 1212121\r\n\r\n> 多数据源**的融合应用**,构建了基于多数据源的知识图谱。首先,对不同领域内的数\r\n\r\n[![PINGGUO](http://blog.zxy97.com/img/20181115174750.jpg \"PINGGUO\")](http://baidu.com \"PINGGUO\")\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta charset=\"utf-8\">\r\n<title>菜鸟教程(runoob.com)</title>\r\n</head>\r\n<body>\r\n    <h1>我的第一个标题</h1>\r\n    <p>我的第一个段落。</p>\r\n</body>\r\n</html>\r\n```\r\n\r\n## LaTeX\r\n\r\n $$\r\n fa=x^2+5\r\n $$\r\n\r\n\r\n## 表格\r\nFirst Name 	| Last Name		| Points\r\n-- | -- | --\r\nJill |	Smith	 |	50\r\nEve |	Jackson	|	94\r\nJohn |	Doe	|	80\r\nAdam |	Johnson		| 67\r\n\r\n\r\n\r\n\r\n', '2018-11-15 17:58:42', '2018-11-15 17:58:42', null, '0');
INSERT INTO `article` VALUES ('6', 'Ajax提交表单', 'Ajax', '', null, null, 'zhaoxuyang', '```js\r\n/* 提交结果，执行ajax */\r\n	function btn() {\r\n		var $btn = $(\"input.btn\"); //获取按钮元素\r\n		//给按钮绑定点击事件\r\n		$btn.bind(\"click\", function() {\r\n			$.ajax({\r\n				type : \"post\",\r\n				url : \"excuteAjaxJsonAction\", //需要用来处理ajax请求的action,excuteAjax为处理的方法名，JsonAction为action名\r\n				data : { //设置数据源\r\n					name : $(\"input[name=name]\").val(),\r\n					age : $(\"input[name=age]\").val(),\r\n					position : $(\"input[name=position]\").val() //这里不要加\",\"  不然会报错，而且根本不会提示错误地方\r\n				},\r\n				dataType : \"json\", //设置需要返回的数据类型\r\n				success : function(data) {\r\n					var d = eval(\"(\" + data + \")\"); //将数据转换成json类型，可以把data用alert()输出出来看看到底是什么样的结构\r\n					//得到的d是一个形如{\"key\":\"value\",\"key1\":\"value1\"}的数据类型，然后取值出来						\r\n					$(\"#s_name\").text(\"\" + d.name + \"\");\r\n					$(\"#s_age\").text(\"\" + d.age + \"\");\r\n					$(\"#s_position\").text(\"\" + d.position + \"\");\r\n				},\r\n				error : function() {\r\n					alert(\"系统异常，请稍后重试！\");\r\n				} //这里不要加\",\"\r\n			});\r\n		});\r\n	}\r\n	/* 页面加载完成，绑定事件 */\r\n	$(document).ready(function() {\r\n		btn(); //点击提交，执行ajax\r\n	});\r\n```', '2018-11-16 19:38:16', '2018-11-27 18:34:47', null, '1');
INSERT INTO `article` VALUES ('7', 'Android界面布局', 'Android', null, null, null, 'zhaoxuyang', '# Android 界面布局\r\n\r\n[TOC]\r\n\r\n## 1 Android界面布局设计模式\r\n\r\n### 1.1 表单布局模式\r\n\r\n表单布局提供与用户交互的界面，例如登录和注册页面，可以采用线性布局和相对布局实现。\r\n\r\n### 1.2 列表布局模式\r\n\r\n当需要展示大量数据时，可以采用列表布局和网格布局实现。\r\n\r\n### 1.3 网格布局模式\r\n列表布局只有一列，网格布局可以有多列。\r\n\r\n## 2 布局管理\r\nAndroid创建的4种布局：帧布局，线性布局，相对布局，网格布局。\r\n\r\n### 2.1 帧布局\r\n`FrameLayout` 帧布局，也可以叫做框架布局，是一种最简单的布局方式，所有视图和控件都固定在屏幕的左上角显示，不能指定视图和控件的位置，但允许有多个视图和控叠加。帧布局很少直接使用，大多数使用它的子类，例如 `TextSwitcher` `ImageSwitcher` `DatePicker` `TimePicker` `ScrollView` `TabHost`\r\n\r\n### 2.2 实例：使用帧布局\r\n\r\n放置 1 个 `ImageView` 和 1 个 `TextView`，布局文件 `activity_main.xml` 代码如下：\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\"com.zxy97.blog.MainActivity\">\r\n\r\n    <ImageView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:src=\"@mipmap/ic_launcher\"/>\r\n\r\n    <TextView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"@string/app_name\"\r\n        android:textColor=\"@color/colorAccent\"\r\n        android:textSize=\"30px\"/>\r\n\r\n</android.support.constraint.ConstraintLayout>\r\n\r\n```\r\n\r\n### 2.3 线性布局\r\n`LinearLayout` 线性布局是所有布局中最常用的，可以让视图垂直排列或水平排列。最重要的属性是：\r\n- 设置排列方向 `android:orientation=\"vertical | horizontal\"`\r\n\r\n### 2.4 实例：使用线性布局实现登录界面\r\n以下的登录界面由 2 个 `TextView` 、 2 个 `EditView` 、以及 `登录按钮` 和 `注册按钮` 构成。\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\"com.zxy97.blog.MainActivity\">\r\n\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:gravity=\"center\"\r\n        android:text=\"线性布局\" />\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\">\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"账号：\"/>\r\n\r\n        <EditText\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\" />\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\">\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"密码：\"/>\r\n\r\n        <EditText\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:inputType=\"textPassword\"/>\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\">\r\n\r\n        <Button\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"登录\"\r\n            android:layout_weight=\"1\"/>\r\n\r\n        <Button\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"注册\"\r\n            android:layout_weight=\"1\"/>\r\n\r\n    </LinearLayout>\r\n\r\n\r\n\r\n</LinearLayout>\r\n\r\n```\r\n### 2.5 相对布局\r\n`RelativeLayout` 相对布局， 允许视图指定相对于其他视图或父视图的位置（通过 `id` 属性引用其他视图）。\r\n\r\n### 2.6 实例：使用相对布局实现查询功能界面\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\"com.zxy97.blog.MainActivity\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/label1\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:gravity=\"left\"\r\n        android:text=\"名称查询：\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/name\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@id/label1\"\r\n        android:background=\"@android:drawable/editbox_background\"/>\r\n\r\n    <Button\r\n        android:id=\"@+id/selectBtn\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentRight=\"true\"\r\n        android:layout_below=\"@id/name\"\r\n        android:text=\"查询\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/returnBtn\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignTop=\"@id/selectBtn\"\r\n        android:layout_toLeftOf=\"@id/selectBtn\"\r\n        android:text=\"返回\" />\r\n\r\n</RelativeLayout>\r\n```\r\n\r\n### 2.7 网格布局\r\n\r\n`Gridlayout` 网格布局， 是在Android 4 及以后版本中推出的。不会显示行、列、单元格的边框线。\r\n\r\n### 2.8 实例1：使用网格布局实现计算器界面\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<GridLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:layout_gravity=\"center_horizontal\"\r\n    android:columnCount=\"4\"\r\n    android:rowCount=\"5\"\r\n    android:orientation=\"horizontal\"\r\n    tools:context=\"com.zxy97.blog.MainActivity\">\r\n\r\n    <Button\r\n        android:id=\"@+id/left\"\r\n        android:text=\"(\" />\r\n    <Button\r\n        android:id=\"@+id/right\"\r\n        android:text=\")\" />\r\n    <Button\r\n        android:id=\"@+id/mod\"\r\n        android:text=\"%\" />\r\n    <Button\r\n        android:id=\"@+id/clear\"\r\n        android:text=\"C\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/btn7\"\r\n        android:text=\"7\" />\r\n    <Button\r\n        android:id=\"@+id/btn8\"\r\n        android:text=\"8\" />\r\n    <Button\r\n        android:id=\"@+id/btn9\"\r\n        android:text=\"9\" />\r\n    <Button\r\n        android:id=\"@+id/divide\"\r\n        android:text=\"÷\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/btn4\"\r\n        android:text=\"4\" />\r\n    <Button\r\n        android:id=\"@+id/btn5\"\r\n        android:text=\"5\" />\r\n    <Button\r\n        android:id=\"@+id/btn6\"\r\n        android:text=\"6\" />\r\n    <Button\r\n        android:id=\"@+id/multiply\"\r\n        android:text=\"×\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/btn1\"\r\n        android:text=\"1\" />\r\n    <Button\r\n        android:id=\"@+id/btn2\"\r\n        android:text=\"2\" />\r\n    <Button\r\n        android:id=\"@+id/btn3\"\r\n        android:text=\"3\" />\r\n    <Button\r\n        android:id=\"@+id/minus\"\r\n        android:text=\"-\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/btn0\"\r\n        android:text=\"0\" />\r\n    <Button\r\n        android:id=\"@+id/point\"\r\n        android:text=\".\" />\r\n    <Button\r\n        android:id=\"@+id/equal\"\r\n        android:text=\"=\" />\r\n    <Button\r\n        android:id=\"@+id/plus\"\r\n        android:text=\"+\" />\r\n\r\n</GridLayout>\r\n```\r\n\r\n### 2.9 实例2：布局嵌套实现登录页面\r\n\r\n本例有 4 个布局文件，主布局文件为 `activity_main.xml` ，代码如下：\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\"com.zxy97.blog.MainActivity\">\r\n\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"嵌套布局\"\r\n        android:textSize=\"20sp\"/>\r\n\r\n    <include\r\n        android:id=\"@+id/include01\"\r\n        layout=\"@layout/layoutcase01\" />\r\n    <include\r\n        android:id=\"@+id/include02\"\r\n        layout=\"@layout/layoutcase02\" />\r\n    <include\r\n        android:id=\"@+id/include03\"\r\n        layout=\"@layout/layoutcase03\" />\r\n\r\n</LinearLayout>\r\n```\r\n\r\n`layoutcase01.xml` 内容如下：\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:orientation=\"horizontal\">\r\n\r\n    <TextView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"账号：\"/>\r\n\r\n    <EditText\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\" />\r\n</LinearLayout>\r\n```\r\n\r\n`layoutcase02.xml` 内容如下：\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:orientation=\"horizontal\">\r\n\r\n    <TextView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"密码：\"/>\r\n\r\n    <EditText\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:inputType=\"textPassword\"/>\r\n</LinearLayout>\r\n```\r\n\r\n`layoutcase03.xml` 内容如下：\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:orientation=\"horizontal\">\r\n\r\n    <Button\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"登录\"\r\n        android:layout_weight=\"1\" />\r\n\r\n    <Button\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"注册\"\r\n        android:layout_weight=\"1\" />\r\n</LinearLayout>\r\n```\r\n## 3 屏幕旋转问题\r\n有的应用在横屏（Landscape）和竖屏（Portrait）的时候采用不同的布局。\r\n> Landscape 本意是风景画，Portrait 本意是肖像画。\r\n> 由于油画中风景画是横幅的，而肖像画是竖幅的，因此 Landscape暗示横屏，Portrait暗示竖屏。\r\n\r\n### 3.1 解决方案\r\n为了实现不同的布局，至少需要定义两个布局文件，然后在程序中加载不同的布局文件，或者采用代码方式创建两套布局文件。\r\n\r\n问题的核心是判断设备处于横屏还是竖屏：\r\n`this.getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT`\r\n\r\n上面的代码表示判断设备的朝向是否等于竖屏。设备朝向常量有 3 个：\r\n- `Configuration.ORENTATION_PORTRAIT` ，竖屏\r\n- `Configuration.ORENTATION_LANDSCAPE` ，横屏\r\n- `Configuration.ORENTATION_UNDEFINED` ，未知\r\n\r\n----\r\n\r\n`Activity.java` 的参考代码如下：\r\n\r\n```java\r\nimport android.content.res.Configuration;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if(this.getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE){\r\n            //加载横屏\r\n            setContentView(R.layout.activity_main);\r\n        } else {\r\n            //加载竖屏\r\n            setContentView(R.layout.activity_main);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### 3.2 实例：加载不同布局文件\r\n\r\n竖屏布局文件 `portrait.xml` 代码如下：\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\">\r\n\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"#a5f43f\"\r\n        android:text=\"竖屏\"\r\n        android:layout_weight=\"1\"/>\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"#e7d96d\"\r\n        android:layout_weight=\"1\"/>\r\n</LinearLayout>\r\n\r\n```\r\n横屏布局文件 `portrait.xml` 代码如下：\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"horizontal\">\r\n\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"#a5f43f\"\r\n        android:text=\"横屏\"\r\n        android:layout_weight=\"1\"/>\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"#e7d96d\"\r\n        android:layout_weight=\"1\"/>\r\n</LinearLayout>\r\n```\r\n\r\n`MainActivity.java` 代码如下：\r\n\r\n```java\r\nimport android.content.res.Configuration;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if(this.getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE){\r\n            //加载横屏\r\n            setContentView(R.layout.landscape);\r\n        } else {\r\n            //加载竖屏\r\n            setContentView(R.layout.portrait);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n\r\n', '2018-11-17 12:53:47', '2018-11-17 14:59:32', null, '0');
INSERT INTO `article` VALUES ('8', 'Android 简单按钮', 'Android', null, null, null, 'zhaoxuyang', '# Android 简单控件\r\n\r\n[TOC]\r\n\r\n## 1 按钮\r\n按钮的作用是接收用户单击事件，并执行相关操作，主要有：\r\n- 普通按钮 `Buttton`\r\n- 图片按钮 `ImageButton`\r\n- 切换按钮 `ToggleButton`\r\n\r\n### 1.1 Button\r\n显示文本，对应类是 `android.widget.Button`。\r\n继承自 `android.widget.TextView` , `android.view.View` ， `java.lang.Object`\r\n通过`android:text`属性设置按钮上的文本。\r\n### 1.2 ImageButton\r\n显示图片，对应类是`android.widget.ImageButton`。\r\n通过`android:src`属性设置按钮上的图片。\r\n继承自 `android.widget.ImageView` , `android.view.View` ， `java.lang.Object`\r\n### 1.3 ToggleButton\r\n显示两种状态，开启或者关闭。系统会根据语言环境自动设置显示的文本，也可以自定义：\r\n通过`android:textOn` `android:textOff`属性设置按钮上的文本。\r\n继承自 `android.widget.Button` ， `android.widget.TextView` , `android.view.View` ， `java.lang.Object`\r\n\r\n### 1.4 实例：ButtonSample\r\n\r\n`activity_main.xml` 内容如下：\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\"com.zxy97.blog.MainActivity\">\r\n\r\n    <!--用来显示按钮单击后的状态-->\r\n    <TextView\r\n        android:id=\"@+id/textView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"/>\r\n\r\n    <Button\r\n        android:id=\"@+id/button\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"普通按钮\"/>\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/imageButton\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:src=\"@mipmap/ic_launcher_round\"/>\r\n\r\n    <ToggleButton\r\n        android:id=\"@+id/toggleButton\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:textOn=\"开\"\r\n        android:textOff=\"关\" />\r\n\r\n</LinearLayout>\r\n```\r\n\r\n`MainActivity.java` 内容如下：\r\n\r\n```java\r\n\r\nimport android.content.res.Configuration;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.TextView;\r\nimport android.widget.ToggleButton;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        final TextView textView = findViewById(R.id.textView);\r\n\r\n        final Button button = (Button) findViewById(R.id.button);\r\n        final ImageButton imageButton = (ImageButton) findViewById(R.id.imageButton);\r\n        final ToggleButton toggleButton =  (ToggleButton) findViewById(R.id.toggleButton);\r\n\r\n        button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                textView.setText(\"普通按钮被单击\");\r\n            }\r\n        });\r\n\r\n        imageButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                textView.setText(\"图片按钮被单击\");\r\n            }\r\n        });\r\n\r\n        toggleButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if(toggleButton.isChecked()){\r\n                    textView.setText(\"切换按钮被开启\");\r\n                } else {\r\n                    textView.setText(\"切换按钮被关闭\");\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n```\r\n\r\n## 2 标签\r\n`TextView` 对于用户来说，是只读的，一般用于显示一些信息。对应类是 `android.widget.TextView`。\r\n继承自 `android.view.View` ， `java.lang.Object`\r\n\r\n## 3 文本框\r\n`EditView` 用来收集输入文本信息与展示文本信息。对应类是 `android.widget.EditView`。\r\n继承自 `android.widget.TextView` , `android.view.View` ， `java.lang.Object`\r\n\r\n### 3.1 文本框相关属性\r\n以下是文本框的特有属性：\r\n- `android:maxLines` 设置显示的最大行数\r\n- `android:minLines` 设置显示的最小行数\r\n- `android:inputType` 输入类型\r\n- `android:hint` 提示文本，没有输入内容时显示\r\n- `android:textColorHint` 提示文本的颜色，默认浅灰色\r\n- `android:singeLine` 是否单行输入，值为 `true` 或 `false`\r\n- `android:background` 文本框的背景\r\n\r\n### 3.2 实例1：用户登录\r\n\r\n`activity_main.xml` 内容如下：\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\"com.zxy97.blog.MainActivity\">\r\n\r\n    <EditText\r\n        android:id=\"@+id/username\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:hint=\"请输入用户名\"\r\n        android:inputType=\"text\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/password\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:hint=\"请输入密码\"\r\n        android:inputType=\"textPassword\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/phone\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:hint=\"请输入手机号码\"\r\n        android:inputType=\"phone\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/saveButton\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"保存\"\r\n        android:layout_gravity=\"center_horizontal\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/result\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"结果将显示在这里\"/>\r\n\r\n</LinearLayout>\r\n```\r\n\r\n`MainActivity.java` 内容如下：\r\n\r\n```java\r\n\r\nimport android.content.res.Configuration;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.TextView;\r\nimport android.widget.ToggleButton;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        final TextView textViewResult = findViewById(R.id.result);\r\n        final EditText editTextUsername = findViewById(R.id.username);\r\n        final EditText editTextPassword = findViewById(R.id.password);\r\n        final EditText editTextPhone = findViewById(R.id.phone);\r\n\r\n        Button buttonSave = findViewById(R.id.saveButton);\r\n        buttonSave.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                String username = editTextUsername.getText().toString();\r\n                String password = editTextPassword.getText().toString();\r\n                String phone = editTextPhone.getText().toString();\r\n\r\n                StringBuffer result = new StringBuffer();\r\n                result.append(\"username=\")\r\n                        .append(username)\r\n                        .append(\"\\npassword=\")\r\n                        .append(password)\r\n                        .append(\"\\nphone=\")\r\n                        .append(phone);\r\n                textViewResult.setText(result);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n```\r\n## 4 单选按钮\r\n\r\n在一组按钮中，只能选择一个，像老式收音机（Radio），只要按下一个按钮其他的按钮就会弹起。\r\n\r\n### 4.1 RadioButton\r\n`RadioButton` 对应类是 `android.widget.RadioButton`。\r\n继承自 `android.widget.CompoundButton` ,`android.widget.Button` ,`android.widget.TextView` , `android.view.View` ， `java.lang.Object`\r\n\r\n具有一个特有的属性 `android:checked` ， `true` 表示选中， `false` 表示未选中。\r\n\r\n### 4.2 RadioGroup\r\n`RadioGroup` 对应类是 `android.widget.RadioGroup`。\r\n是一个视图组，只有放到里面的单选按钮才能产生互斥事件，不同组之间没有关系。\r\n继承自 `android.widget.CompoundButton` ,`android.widget.Button` ,`android.widget.TextView` , `android.view.View` ， `java.lang.Object`\r\n\r\n\r\n\r\n### 4.3 实例：使用单选按钮\r\n\r\n## 5 复选框\r\n\r\n### 5.1 CheckBox\r\n\r\n### 5.2 实例：使用复选框\r\n\r\n## 6 进度栏\r\n\r\n### 6.1 进度栏相关属性和方法\r\n\r\n### 6.2 实例1：水平状态栏\r\n\r\n### 6.3 实例2：圆形进度栏\r\n\r\n## 7 拖动栏\r\n\r\n### 7.1 SeekBar\r\n\r\n### 7.2 实例：使用拖动栏\r\n', '2018-11-17 15:08:46', '2018-11-17 21:02:37', null, '0');
INSERT INTO `article` VALUES ('9', 'Android 高级控件', 'Android', null, null, null, 'zhaoxuyang', '# Android 高级控件\r\n\r\n[TOC]\r\n\r\n## 1 列表类控件\r\n\r\n### 1.1 适配器\r\n\r\n### 1.2 Spinner\r\n\r\n`activity_main.xml`\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\"com.zxy97.blog.MainActivity\">\r\n\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"选择你喜欢的颜色：\" />\r\n\r\n    <Spinner\r\n        android:id=\"@+id/colorSpinner\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"/>\r\n\r\n    <TextView\r\n        android:id=\"@+id/result\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\" />\r\n</LinearLayout>\r\n```\r\n\r\n`MainActivity.java`\r\n\r\n```java\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\n\r\npublic class MainActivity extends AppCompatActivity{\r\n\r\n    static final String[] COLORS = new String[]{\r\n            \"红色\",\"黑色\",\"黄色\",\"其他\"\r\n    };\r\n    TextView result = (TextView) findViewById(R.id.result);\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        final ArrayAdapter<CharSequence> arrayAdapter = new ArrayAdapter<CharSequence>(this,android.R.layout.simple_spinner_item,COLORS);\r\n        arrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n\r\n        Spinner colorSpinner = (Spinner) findViewById(R.id.colorSpinner);\r\n        colorSpinner.setAdapter(arrayAdapter);\r\n\r\n        colorSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                String str = arrayAdapter.getItem(i).toString();\r\n                result.setText(str);\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {\r\n                String str = \"未选择\";\r\n                result.setText(str);\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n```\r\n\r\n### 1.3 实例：使用 Spinner 进行选择\r\n\r\n### 1.4 ListView\r\n\r\n### 1.5 使用ListView 实现选择文本\r\n\r\n### 1.6 实例：使用ListView实现选择文本+图片\r\n\r\n## 2 Toast\r\n\r\n```\r\npackage com.zxy97.study;\r\n\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n\r\n        //文本类型\r\n        Toast.makeText(MainActivity.this, \"欢迎进入！\",Toast.LENGTH_LONG).show();\r\n\r\n        //图片类型\r\n        ImageView imageView = new ImageView(MainActivity.this);\r\n        imageView.setImageResource(R.mipmap.ic_launcher);\r\n        Toast toast = new Toast(MainActivity.this);\r\n        toast.setView(imageView);\r\n        toast.setDuration(Toast.LENGTH_SHORT);\r\n        toast.show();\r\n\r\n        //文本+图片类型\r\n        TextView textView = new TextView(MainActivity.this);\r\n        textView.setText(\"文本\");\r\n\r\n        LinearLayout linearLayout = new LinearLayout(MainActivity.this);\r\n        linearLayout.setOrientation(LinearLayout.VERTICAL);\r\n        linearLayout.addView(imageView);\r\n        linearLayout.addView(textView);\r\n\r\n        Toast textAndImageToast = new Toast(MainActivity.this);\r\n        toast.setView(linearLayout);\r\n        toast.show();\r\n    }\r\n}\r\n\r\n```\r\n\r\n## 3 对话框\r\n\r\n### 3.1 实例1：显示文本信息对话框\r\n\r\n`activity_main.xml`\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    tools:context=\"com.zxy97.study.MainActivity\">\r\n\r\n    <Button\r\n        android:id=\"@+id/button\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"按钮\"/>\r\n\r\n</LinearLayout>\r\n\r\n```\r\n\r\n`MainActivity.java`\r\n\r\n```java\r\npackage com.zxy97.study;\r\n\r\nimport android.content.DialogInterface;\r\nimport android.support.v7.app.AlertDialog;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.view.View.OnClickListener;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener{\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        Button button  = findViewById(R.id.button);\r\n        button.setOnClickListener(this);\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        AlertDialog alertDialog = new AlertDialog.Builder(this).\r\n                setIcon(R.mipmap.ic_launcher)\r\n                .setTitle(\"标题\")\r\n                .setMessage(\"提示信息\")\r\n                .setPositiveButton(\"确定\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        Toast.makeText(MainActivity.this,\"你单击了确定按钮\",Toast.LENGTH_SHORT).show();\r\n                    }\r\n                })\r\n                .setNeutralButton(\"其他\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        Toast.makeText(MainActivity.this,\"你单击了其他按钮\",Toast.LENGTH_SHORT).show();\r\n                    }\r\n                })\r\n                .setNegativeButton(\"取消\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        Toast.makeText(MainActivity.this,\"你单击了取消按钮\",Toast.LENGTH_SHORT).show();\r\n                    }\r\n                })\r\n                .create();\r\n        alertDialog.show();\r\n    }\r\n}\r\n\r\n\r\n```\r\n### 3.2 实例2：简单列表对话框\r\n\r\n\r\n```java\r\npackage com.zxy97.study;\r\n\r\nimport android.content.DialogInterface;\r\nimport android.support.v7.app.AlertDialog;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.view.View.OnClickListener;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener{\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        Button button  = findViewById(R.id.button);\r\n        button.setOnClickListener(this);\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        final String[] items = {\r\n                \"南美洲\",\"欧洲\",\"南极洲\",\"北美洲\",\"非洲\",\"亚洲\",\"大洋洲\"\r\n        };\r\n        AlertDialog alertDialog = new AlertDialog.Builder(this).\r\n                setIcon(R.mipmap.ic_launcher)\r\n                .setTitle(\"标题\")\r\n                .setItems(items, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        Toast.makeText(MainActivity.this,i+\":\"+items[i],Toast.LENGTH_LONG).show();\r\n                    }\r\n                })\r\n                .create();\r\n        alertDialog.show();\r\n    }\r\n}\r\n\r\n\r\n```\r\n### 3.3 实例3：单选列表对话框\r\n\r\n```java\r\npackage com.zxy97.study;\r\n\r\nimport android.content.DialogInterface;\r\nimport android.support.v7.app.AlertDialog;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.view.View.OnClickListener;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener{\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        Button button  = findViewById(R.id.button);\r\n        button.setOnClickListener(this);\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        final String[] items = {\r\n                \"南美洲\",\"欧洲\",\"南极洲\",\"北美洲\",\"非洲\",\"亚洲\",\"大洋洲\"\r\n        };\r\n        AlertDialog alertDialog = new AlertDialog.Builder(this).\r\n                setIcon(R.mipmap.ic_launcher)\r\n                .setTitle(\"标题\")\r\n                .setSingleChoiceItems(items,0, new DialogInterface.OnClickListener() {//0表示默认选中第一项\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        Toast.makeText(MainActivity.this,i+\":\"+items[i],Toast.LENGTH_LONG).show();\r\n                    }\r\n                })\r\n                .setPositiveButton(\"确定\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n\r\n                    }\r\n                })\r\n                .setNegativeButton(\"取消\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n\r\n                    }\r\n                })\r\n                .create();\r\n        alertDialog.show();\r\n    }\r\n}\r\n\r\n```\r\n\r\n\r\n### 3.4 实例4：复选列表项对话框\r\n\r\n```java\r\npackage com.zxy97.study;\r\n\r\nimport android.content.DialogInterface;\r\nimport android.support.v7.app.AlertDialog;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.Toast;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener{\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        Button button  = findViewById(R.id.button);\r\n        button.setOnClickListener(this);\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        final String[] items = {\r\n                \"南美洲\",\"欧洲\",\"南极洲\",\"北美洲\",\"非洲\",\"亚洲\",\"大洋洲\"\r\n        };\r\n        final boolean [] selectList = new boolean[items.length];\r\n        AlertDialog alertDialog = new AlertDialog.Builder(this).\r\n                setIcon(R.mipmap.ic_launcher)\r\n                .setTitle(\"标题\")\r\n                .setMultiChoiceItems(items, selectList, new DialogInterface.OnMultiChoiceClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i, boolean b) {\r\n                        selectList[i] = b;\r\n                    }\r\n                })\r\n                .setPositiveButton(\"确定\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        List<String> selected = new ArrayList<String>();\r\n\r\n                        for(int k = 0; k<selectList.length;k++){\r\n                            if(selectList[k]){\r\n                                selected.add(items[k]);\r\n                            }\r\n                        }\r\n                        Toast.makeText(MainActivity.this,selected.toString(),Toast.LENGTH_LONG).show();\r\n                    }\r\n                })\r\n                .setNegativeButton(\"取消\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n\r\n                    }\r\n                })\r\n                .create();\r\n        alertDialog.show();\r\n    }\r\n}\r\n\r\n```\r\n\r\n### 3.5 实例5：自定义布局对话框\r\n\r\n```java\r\npackage com.zxy97.study;\r\n\r\nimport android.content.DialogInterface;\r\nimport android.support.v7.app.AlertDialog;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.Toast;\r\n\r\n\r\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener{\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        Button button  = findViewById(R.id.button);\r\n        button.setOnClickListener(this);\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n\r\n        LayoutInflater factory = LayoutInflater.from(this);\r\n        final View textEntryView = factory.inflate(R.layout.activity_main,null);\r\n        AlertDialog alertDialog = new AlertDialog.Builder(this).\r\n                setIcon(R.mipmap.ic_launcher)\r\n                .setView(textEntryView)\r\n                .setPositiveButton(\"确定\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        Toast.makeText(MainActivity.this,\"自定义\",Toast.LENGTH_LONG).show();\r\n                    }\r\n                })\r\n                .setNegativeButton(\"取消\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n\r\n                    }\r\n                })\r\n                .create();\r\n        alertDialog.show();\r\n    }\r\n}\r\n\r\n```\r\n\r\n## 4 操作栏和菜单\r\n\r\n### 4.1 操作栏\r\n\r\n### 4.2 菜单编程\r\n\r\n### 4.3 实例：文本菜单\r\n\r\n### 4.4 实例：操作表按钮\r\n', '2018-11-17 22:28:41', '2018-11-19 12:51:06', null, '0');
INSERT INTO `article` VALUES ('10', 'RSA原理', '信息安全', null, null, null, 'zhaoxuyang', '# RSA原理\r\n\r\n[TOC]\r\n\r\n## 1 密钥生成的步骤\r\n\r\n### 1.1 随机选择两个不相等的质数p和q\r\n\r\n$$p=65$$\r\n\r\n$$q=53$$\r\n\r\n选择61和53\r\n\r\n> 实际应用中，这两个质数越大，就越难破解。\r\n\r\n### 1.2计算p和q的乘积n\r\n\r\n$$ n = 61 \\times 53 = 3233 $$\r\n\r\nn的长度就是密钥长度。\r\n\r\n3233写成二进制是110010100001，一共有12位，所以这个密钥就是12位。\r\n\r\n> 实际应用中，RSA密钥一般是1024位，重要场合则为2048位。\r\n\r\n### 1.3 计算n的欧拉函数φ(n)\r\n\r\n$$ \\varphi(n) = (p-1)(q-1) $$\r\n\r\n### 1.4 随机选择一个整数e，条件是 1< e < φ(n)，且 e 与 φ(n) 互质\r\n\r\n$$ e=17 $$\r\n\r\n随机选择了17\r\n\r\n> 实际应用中，常常选择65537。\r\n\r\n### 1.5 计算e对于φ(n)的模反元素d\r\n\r\n> 所谓 `模反元素` 就是指有一个整数d，可以使得ed被φ(n)除的余数为1\r\n\r\n$$ ed \\equiv 1 (mod \\quad \\varphi(n)) $$\r\n\r\n等价于：\r\n\r\n$$ ed - 1 = k\\varphi(n)$$\r\n\r\n于是，找到模反元素d，实质上就是对下面这个二元一次方程求解：\r\n\r\n$$ ex + \\varphi(n)y = 1 $$\r\n\r\n已知 e=17, φ(n)=3120\r\n\r\n$$ 17x + 3120y = 1 $$\r\n\r\n算出一组整数解为\r\n\r\n$$  (x,y)=(2753,-15) $$\r\n\r\n即：\r\n\r\n$$ d=2753 $$\r\n\r\n\r\n### 1.6 小结\r\n\r\n`p` `q` `n` `φ(n)` `e` `d`\r\n\r\n这六个数字之中，公钥用到了两个（`n`和`e`），其余四个数字都是不公开的。\r\n\r\n其中最关键的是`d`，因为`n`和`d`组成了私钥，一旦d泄漏，就等于私钥泄漏。\r\n\r\n## 2 加密和解密\r\n\r\n### 2.1 加密要用公钥 (n,e)\r\n客户端要发送加密信息m，则要用服务端的公钥 (n,e) 对m进行加密。\r\n这里需要注意，m必须是整数（字符串可以取ascii值或unicode值），且m必须小于n。\r\n\r\n所谓\"加密\"，就是算出下式的c：\r\n\r\n$$ me \\equiv c (mod \\quad n) $$\r\n\r\n\r\n公钥是 (3233, 17)，m假设是65，那么可以算出下面的等式：\r\n\r\n$$ 6517 \\equiv 2790 (mod \\quad 3233) $$\r\n\r\n于是，c等于2790，客户端就把2790发给了服务端。\r\n\r\n### 2.2 解密要用私钥(n,d)\r\n\r\n服务端拿到客户端发来的2790以后，就用私钥(3233, 2753) 进行解密。可以证明，下面的等式一定成立：\r\n\r\n$$cd \\equiv m (mod \\quad n)$$\r\n\r\n也就是说，c的d次方除以n的余数为m。现在，c等于2790，私钥是(3233, 2753)，那么，服务端算出\r\n\r\n$$27902753 \\equiv 65 (mod \\quad 3233)$$\r\n\r\n因此，服务端知道了客户端加密前的原文就是65。\r\n\r\n至此，\"加密--解密\"的整个过程全部完成。\r\n\r\n可以看到，如果不知道d，就没有办法从c求出m。而前面已经说过，要知道d就必须分解n，这是极难做到的，所以RSA算法保证了通信安全。\r\n\r\n公钥(n,e) 只能加密小于n的整数m，那么如果要加密大于n的整数，该怎么办？\r\n\r\n有两种解决方法：一种是把长信息分割成若干段短消息，每段分别加密；另一种是先选择一种\"对称性加密算法\"（比如DES），用这种算法的密钥加密信息，再用RSA公钥加密DES密钥', '2018-11-18 14:36:32', '2018-11-18 14:53:06', null, '0');
INSERT INTO `article` VALUES ('11', 'Android Studio', 'Android', null, null, null, 'zhaoxuyang', '# Android Studio\r\n\r\n## 设置字号\r\n\r\n单击 `File`\r\n选择 `Settings`\r\n搜索关键词`size`，单击`KeyMap`\r\n在右边看到 `Decrease Font Size` `Increase Font Size` `Reset Font Size`\r\n\r\n双击 `Decrease Font Size` 为缩小字体设置快捷键\r\n单击 `Add Mouse Shortcut` 添加快捷键\r\n按住 `Ctrl` 向小滚动鼠标滑轮\r\n\r\n为增大字体设置快捷键与上类似\r\n\r\n\r\n\r\n \r\n \r\n\r\n', '2018-11-19 12:43:32', '2018-11-19 12:43:32', null, '1');
INSERT INTO `article` VALUES ('12', 'Android 活动', 'Android', null, null, null, 'zhaoxuyang', '# Android 活动\r\n\r\n[TOC]\r\n\r\n## 活动概述\r\n\r\n活动能够包含若干个视图，是视图的“容器”或“载体”，相当于Java Swing中的JFrame和.NET中的WinForm\r\n\r\n### 创建活动\r\n\r\n> 1. 编写相应的组件类\r\n> 2. 在AndroidMainifest.xml文件中注册\r\n\r\n（1）编写相应的组件类\r\n要求继承`android.app.Activity`或其子类，常用子类如下：\r\n\r\n子类名称 | 含义\r\n-- | --\r\nandroid.app.Activity | 最基本的活动类\r\nandroid.app.ListActivity | 提供列表控件的活动类\r\nandroid.support.v4.FragmentActivity | 支持碎片功能的活动类\r\nandroid.support.v7.app.AppCompatActivity | 支持ActionBar的活动类，应用主题是 Theme.AppCompat\r\n\r\n\r\n`android.support.v7.app.AppCompatActivity` 继承自 `android.support.v4.FragmentActivity`\r\n\r\n`android.support.v4.FragmentActivity` 和 `android.app.ListActivity` 继承自 `android.app.Activity`\r\n\r\n`android.app.Activity` 继承自 `android.content.Context`\r\n\r\n`android.content.Context` 继承自 `java.lang.Object`\r\n\r\n创建活动的示例代码：\r\n```java\r\n\r\nimport android.app.Activity;\r\nimport android.os.Bundle;\r\n\r\npublic class MainActivity extends Activity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n    }\r\n}\r\n\r\n```\r\n\r\n### 活动的生命周期\r\n\r\n可以有多个活动，由任务（Task）管理，任务将活动放到返回栈（Back Stack）中，处于栈顶的是当前活动。\r\n\r\n活动有 3 种状态：\r\n- 运行状态\r\n- 暂停状态\r\n- 停止状态\r\n\r\n活动有 7 个方法：\r\n- onCreate()\r\n- onStart()\r\n- onResume()\r\n- onPause()\r\n- onStop()\r\n- onRestart()\r\n- onDestroy()\r\n\r\n> Back和Home按钮的区别\r\n> Back会调用onPause(),onStop(),onDestroy()\r\n> Home会调用onPause(),onStop()\r\n\r\n\r\n\r\n### 多活动之间的跳转\r\n\r\n- 登录案例介绍\r\n\r\n- 启动下一个活动\r\n\r\n- 参数传递\r\n\r\n- 返回上一个活动\r\n\r\n----\r\n\r\nIntent的状态码：\r\n\r\n```java\r\npackage com.zxy97.study;\r\n\r\npublic class RequestCode {\r\n    public final static int LOGIN = 1;\r\n    public final static int LOGIN_SUCCESS = 2;\r\n    public final static int LOGIN_FAIL = 3;\r\n}\r\n\r\n```\r\n\r\n\r\n登录的活动类：\r\n\r\n```java\r\npackage com.zxy97.study;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.support.design.widget.FloatingActionButton;\r\nimport android.support.design.widget.Snackbar;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.support.v7.widget.Toolbar;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        final EditText usernameEditText = findViewById(R.id.usernameEditText);\r\n        final EditText passwordEditText = findViewById(R.id.passwordEditText);\r\n        Button loginButton =  findViewById(R.id.loginButton);\r\n\r\n        loginButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                String username = usernameEditText.getText().toString();\r\n                String password = passwordEditText.getText().toString();\r\n                Intent intent;\r\n                if(LoginCheck(username,password)){\r\n                    intent = new Intent(LoginActivity.this,SuccessActivity.class);\r\n                    intent.putExtra(\"loginUsername\",username);\r\n                    intent.putExtra(\"logonPassword\",password);\r\n                    startActivityForResult(intent,RequestCode.LOGIN_SUCCESS);\r\n                } else {\r\n                    intent = new Intent(LoginActivity.this,FailActivity.class);\r\n                    startActivityForResult(intent,RequestCode.LOGIN_FAIL);\r\n                }\r\n                //startActivity(intent);\r\n            }\r\n        });\r\n    }\r\n\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data){\r\n        switch (requestCode){\r\n            case RequestCode.LOGIN_SUCCESS:\r\n                Toast.makeText(LoginActivity.this,\"从成功页面返回\",Toast.LENGTH_LONG).show();\r\n                break;\r\n            case RequestCode.LOGIN_FAIL:\r\n                Toast.makeText(LoginActivity.this,\"从失败页面返回\",Toast.LENGTH_LONG).show();\r\n        }\r\n    }\r\n\r\n    private boolean LoginCheck(final String username, final String password){\r\n        boolean canLogin = false;\r\n        if(username == null || password == null){\r\n            return canLogin;\r\n        }\r\n        if(\"\".equals(username) || \"\".equals(password)){\r\n            return canLogin;\r\n        }\r\n        if(username.equals(password)){\r\n            canLogin = true;\r\n        }\r\n        return canLogin;\r\n    }\r\n\r\n}\r\n\r\n```\r\n\r\n登录成功的活动类：\r\n\r\n```java\r\npackage com.zxy97.study;\r\n\r\nimport android.content.Intent;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\n\r\npublic class SuccessActivity extends AppCompatActivity {\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_success);\r\n\r\n        final TextView usernameEditText = findViewById(R.id.usernameTextView);\r\n        Button returnButton =  findViewById(R.id.returnButton);\r\n        final Intent intent = this.getIntent();\r\n        Bundle bundle = intent.getExtras();\r\n        usernameEditText.setText(bundle.getString(\"loginUsername\"));\r\n\r\n        returnButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                finish();\r\n            }\r\n        });\r\n\r\n    }\r\n}\r\n\r\n```\r\n\r\n登录失败的活动类：\r\n\r\n```java\r\npackage com.zxy97.study;\r\n\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\n\r\npublic class FailActivity extends AppCompatActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_fail);\r\n\r\n        Button returnButton =  findViewById(R.id.returnButton);\r\n\r\n        returnButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n```\r\n\r\nactivity_fail.xml：\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\"com.zxy97.study.FailActivity\">\r\n\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:gravity=\"center\"\r\n        android:text=\"登录失败页面\" />\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\">\r\n\r\n        <Button\r\n            android:id=\"@+id/returnButton\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"返回\"\r\n            android:layout_weight=\"1\"/>\r\n\r\n    </LinearLayout>\r\n\r\n\r\n\r\n</LinearLayout>\r\n```\r\n\r\nactivity_login.xml：\r\n```xml\r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\"com.zxy97.study.LoginActivity\">\r\n\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:gravity=\"center\"\r\n        android:text=\"登录页面(账号密码相同即可登录)\" />\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\">\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"账号：\"/>\r\n\r\n        <EditText\r\n            android:id=\"@+id/usernameEditText\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\" />\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\">\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"密码：\"/>\r\n\r\n        <EditText\r\n            android:id=\"@+id/passwordEditText\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:inputType=\"textPassword\"/>\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\">\r\n\r\n        <Button\r\n            android:id=\"@+id/loginButton\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"登录\"\r\n            android:layout_weight=\"1\"/>\r\n\r\n    </LinearLayout>\r\n\r\n</LinearLayout>\r\n```\r\n\r\nactivity_success.xml：\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\"com.zxy97.study.SuccessActivity\">\r\n\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:gravity=\"center\"\r\n        android:text=\"登录成功页面\" />\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/usernameTextView\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"账号：\"/>\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\">\r\n\r\n        <Button\r\n            android:id=\"@+id/returnButton\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"返回\"\r\n            android:layout_weight=\"1\"/>\r\n\r\n    </LinearLayout>\r\n\r\n</LinearLayout>\r\n\r\n```\r\n\r\nAndroidMainifest.xml：\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.zxy97.study\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:label=\"@string/title_activity_login\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".SuccessActivity\" />\r\n        <activity android:name=\".FailActivity\" />\r\n    </application>\r\n\r\n</manifest>\r\n```\r\n## 活动任务与活动栈', '2018-11-19 13:27:49', '2018-11-19 14:54:22', null, '0');
INSERT INTO `article` VALUES ('13', 'Android 碎片', 'Android', null, null, null, 'zhaoxuyang', '# Adnroid 碎片\r\n\r\n> 碎片（Fragment）是类似于活动功能的“局部界面”，通过碎片可以使应用适配于多种设备和屏幕尺寸。\r\n\r\n[TOC]\r\n\r\n\r\n## 1 概述\r\n\r\n界面重用问题\r\n\r\n碎片技术\r\n\r\n## 2 碎片的生命周期\r\n\r\n3种状态：\r\n\r\n- 运行状态：获得焦点，高亮显示\r\n- 暂停状态：失去焦点，暗色显示\r\n- 停止状态：所处活动处于停止状态\r\n\r\n11个方法：\r\n\r\n- onAttach()：添加碎片到活动，与活动建立关联\r\n- onCreate()：创建碎片时调用\r\n- onCreateView()：系统第一次绘制碎片时调用\r\n- onActivityCreated()：碎片所在活动被创建完成，碎片相关视图也创建完成时\r\n- onStart()：碎片所在的活动由不可见变为可见，但还是暗色\r\n- onResume()：获得焦点，由暗色变为高亮\r\n- onStop()：由暂停变为停止\r\n- onDestroyView()：销毁碎片相关视图\r\n- onDestroy()：碎片被销毁\r\n- onDetach()：与活动解除关联\r\n\r\n\r\n## 3 使用碎片开发\r\n\r\n### 3.1 碎片相关类\r\n\r\n### 3.2 创建碎片\r\n\r\n### 3.3 静态添加碎片到活动\r\n\r\n### 3.4 动态添加碎片到活动\r\n\r\n### 3.5 管理碎片事务\r\n\r\n### 3.6 碎片与活动之间的通信\r\n\r\n## 4 案例：比赛项目\r\n\r\n### 4.1 创建两个碎片\r\n\r\n### 4.2 创建MainActivity活动类\r\n\r\n### 4.3 单击Master碎片列表项\r\n\r\n### 4.4 数据访问对象EnvnetsDAO', '2018-11-19 15:07:13', '2018-11-19 16:34:12', null, '1');
INSERT INTO `article` VALUES ('14', 'Android 意图', 'Android', null, null, null, 'zhaoxuyang', '# Android 意图\r\n\r\n[TOC]\r\n\r\n```java\r\npackage com.zxy97.intenttest;\r\n\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        Button mapButton = findViewById(R.id.mapButton);\r\n        Button mailButton = findViewById(R.id.mailButton);\r\n        Button phoneButton =  findViewById(R.id.phoneButton);\r\n        Button webButton = findViewById(R.id.webButton);\r\n\r\n        mapButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Uri uri = Uri.parse(\"geo:39.904667,116.408198\");\r\n                Intent intent = new Intent(Intent.ACTION_VIEW,uri);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        phoneButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Uri uri = Uri.parse(\"tel:18821714373\");\r\n                Intent intent = new Intent(Intent.ACTION_VIEW,uri);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        webButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Uri uri = Uri.parse(\"http://zxy97.com/\");\r\n                Intent intent = new Intent(Intent.ACTION_VIEW,uri);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        mailButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(Intent.ACTION_SEND);\r\n                intent.putExtra(Intent.EXTRA_TEXT,\"主体内容\");\r\n                intent.putExtra(Intent.EXTRA_SUBJECT,\"标题\");\r\n                intent.setType(\"text/plain\");\r\n                startActivity(intent);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n```\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\"com.zxy97.intenttest.MainActivity\">\r\n\r\n    <Button\r\n        android:id=\"@+id/webButton\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"1\"\r\n        android:text=\"浏览器\" />\r\n    <Button\r\n        android:id=\"@+id/mapButton\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"1\"\r\n        android:text=\"地图\" />\r\n    <Button\r\n        android:id=\"@+id/phoneButton\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"1\"\r\n        android:text=\"电话\" />\r\n    <Button\r\n        android:id=\"@+id/mailButton\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"1\"\r\n        android:text=\"邮件\" />\r\n\r\n\r\n\r\n\r\n</LinearLayout>\r\n\r\n```\r\n\r\n\r\n### 广播消息\r\n\r\n```java\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.widget.Toast;\r\n\r\npublic class B extends BroadcastReceiver {\r\n    @Override\r\n    public void onReceive(Context context, Intent intent) {\r\n        String student = intent.getStringExtra(\"student\");\r\n        Toast.makeText(context,student,Toast.LENGTH_LONG).show();\r\n    }\r\n}\r\n\r\n```\r\n\r\n```java\r\n\r\nimport android.content.Intent;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n        final static String UID = \"com.zxy97.uid\";\r\n        @Override\r\n        public void onCreate(Bundle savedInstanceState){\r\n            super.onCreate(savedInstanceState);\r\n            setContentView(R.layout.activity_main);\r\n\r\n            Button sendButton = (Button)findViewById(R.id.sendButton);\r\n            sendButton.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    TextView resultTextView = (TextView) findViewById(R.id.resultTextView);\r\n                    EditText messageEditText = (EditText) findViewById(R.id.messageEditText);\r\n                    resultTextView.setText(\"已发送\");\r\n\r\n                    Intent intent = new Intent(UID);\r\n                    intent.putExtra(\"student\",messageEditText.getText().toString());\r\n                    sendBroadcast(intent);\r\n                }\r\n            });\r\n\r\n\r\n        }\r\n\r\n}\r\n\r\n```\r\n\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\"com.example.administrator.myapplication.MainActivity\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:orientation=\"horizontal\"\r\n        android:layout_height=\"wrap_content\">\r\n        <TextView\r\n            android:id=\"@+id/txt\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"广播消息：\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintLeft_toLeftOf=\"parent\"\r\n            app:layout_constraintRight_toRightOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n        <EditText\r\n            android:id=\"@+id/messageEditText\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\" />\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\">\r\n\r\n        <Button\r\n            android:id=\"@+id/sendButton\"\r\n            android:text=\"发送\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\" />\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/resultTextView\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\" />\r\n    </LinearLayout>\r\n\r\n\r\n\r\n\r\n</LinearLayout>\r\n\r\n```\r\n\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.administrator.myapplication\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n        <activity android:name=\".MainActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <receiver android:name=\".B\">\r\n            <intent-filter>\r\n                <action android:name=\"com.zxy97.uid\"></action>\r\n            </intent-filter>\r\n        </receiver>\r\n    </application>\r\n\r\n</manifest>\r\n```\r\n\r\n', '2018-11-19 16:35:27', '2018-11-22 15:16:33', null, '1');
INSERT INTO `article` VALUES ('15', 'Android 数据存储', 'Android', null, null, null, 'zhaoxuyang', '# Android 数据存储\r\n\r\n[TOC]\r\n\r\n## Android 数据存储概述\r\n\r\n- 文件系统。使用java的IO流实现\r\n- 数据库。使用SQLite数据库\r\n- 云服务。网络通信技术\r\n- Shared Preferences。少量的键值对，保存设置参数等\r\n\r\n## SQLite数据库\r\n\r\nDBAdapter.java\r\n```java\r\n\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.database.sqlite.SQLiteException;\r\nimport android.database.sqlite.SQLiteOpenHelper;\r\n\r\npublic class DBAdapter {\r\n    private static final String DB_NAME = \"people.db\";\r\n    private static final String DB_TABLE = \"peopleinfo\";\r\n    private static final int DB_VERSION = 1;\r\n\r\n    public static final String KEY_ID = \"_id\";\r\n    public static final String KEY_NAME = \"name\";\r\n    public static final String KEY_AGE = \"age\";\r\n    public static final String KEY_HEIGHT = \"height\";\r\n\r\n    private SQLiteDatabase db;\r\n    private final Context context;\r\n	private DBOpenHelper dbOpenHelper;\r\n\r\n    private static class DBOpenHelper extends SQLiteOpenHelper {\r\n        public DBOpenHelper(Context context, String name, SQLiteDatabase.CursorFactory factory, int version)\r\n        {\r\n            super(context,name,factory,version);\r\n        }\r\n        private static final String DB_CREATE = \"create table \" +\r\n                DB_TABLE + \" (\" + KEY_ID + \" integer primary key autoincrement, \" +\r\n                KEY_NAME+ \" text not null, \" + KEY_AGE+ \" integer,\" + KEY_HEIGHT + \" float);\";\r\n\r\n        @Override\r\n        public void onCreate(SQLiteDatabase _db) {\r\n            _db.execSQL(DB_CREATE);\r\n        }\r\n\r\n        @Override\r\n        public void onUpgrade(SQLiteDatabase _db, int _oldVersion, int _newVersion) {\r\n            _db.execSQL(\"DROP TABLE IF EXISTS \" + DB_TABLE);\r\n            onCreate(_db);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public DBAdapter(Context _context) {\r\n        context = _context;\r\n    }\r\n\r\n    public void open() throws SQLiteException {\r\n        dbOpenHelper = new DBOpenHelper(context, DB_NAME, null, DB_VERSION);\r\n        try {\r\n            db = dbOpenHelper.getWritableDatabase();\r\n        }catch (SQLiteException ex) {\r\n            db = dbOpenHelper.getReadableDatabase();\r\n        }\r\n    }\r\n\r\n    public void close() {\r\n        if (db != null){\r\n            db.close();\r\n            db = null;\r\n        }\r\n    }\r\n\r\n    public long insert(People people) {\r\n        ContentValues newValues = new ContentValues();\r\n\r\n        newValues.put(KEY_NAME, people.Name);\r\n        newValues.put(KEY_AGE, people.Age);\r\n        newValues.put(KEY_HEIGHT, people.Height);\r\n\r\n        return db.insert(DB_TABLE, null, newValues);\r\n    }\r\n\r\n    public long deleteAllData() {\r\n        return db.delete(DB_TABLE, null, null);\r\n    }\r\n\r\n    public long deleteOneData(long id) {\r\n        return db.delete(DB_TABLE,  KEY_ID + \"=\" + id, null);\r\n    }\r\n\r\n    public long updateOneData(long id , People people){\r\n        ContentValues updateValues = new ContentValues();\r\n        updateValues.put(KEY_NAME, people.Name);\r\n        updateValues.put(KEY_AGE, people.Age);\r\n        updateValues.put(KEY_HEIGHT, people.Height);\r\n\r\n        return db.update(DB_TABLE, updateValues,  KEY_ID + \"=\" + id, null);\r\n    }\r\n\r\n    private People[] ConvertToPeople(Cursor cursor){\r\n        int resultCounts = cursor.getCount();\r\n        if (resultCounts == 0 || !cursor.moveToFirst()){\r\n            return null;\r\n        }\r\n        People[] peoples = new People[resultCounts];\r\n        for (int i = 0 ; i<resultCounts; i++){\r\n            peoples[i] = new People();\r\n            peoples[i].ID = cursor.getInt(0);\r\n            peoples[i].Name = cursor.getString(cursor.getColumnIndex(KEY_NAME));\r\n            peoples[i].Age = cursor.getInt(cursor.getColumnIndex(KEY_AGE));\r\n            peoples[i].Height = cursor.getFloat(cursor.getColumnIndex(KEY_HEIGHT));\r\n            cursor.moveToNext();\r\n        }\r\n        return peoples;\r\n    }\r\n\r\n    public People[] getOneData(long id) {\r\n        Cursor results =  db.query(DB_TABLE, new String[] { KEY_ID, KEY_NAME, KEY_AGE, KEY_HEIGHT}, KEY_ID + \"=\" + id, null, null, null, null);\r\n        return ConvertToPeople(results);\r\n    }\r\n\r\n    public People[] getAllData() {\r\n        Cursor results = db.query(DB_TABLE, new String[] { KEY_ID, KEY_NAME, KEY_AGE, KEY_HEIGHT}, null, null, null, null, null);\r\n        return ConvertToPeople(results);\r\n    }\r\n\r\n\r\n}\r\n\r\n```\r\n\r\nMainActivity.java\r\n```java\r\n\r\nimport android.os.Bundle;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.view.View;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ListView;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    EditText e1;\r\n    EditText e2;\r\n    EditText e3;\r\n    EditText e4;\r\n    Button addone;\r\n    Button showall;\r\n    Button clearshow;\r\n    Button deleteall;\r\n    Button deleteone;\r\n    Button selectone;\r\n    Button updateone;\r\n    private DBAdapter db;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        e1=(EditText)findViewById(R.id.name);\r\n        e2=(EditText)findViewById(R.id.age);\r\n        e3=(EditText)findViewById(R.id.height);\r\n        e4=(EditText)findViewById(R.id.ID);\r\n        addone=(Button)findViewById(R.id.addone);\r\n        showall=(Button)findViewById(R.id.showall);\r\n        clearshow=(Button)findViewById(R.id.clearshow);\r\n        deleteall=(Button)findViewById(R.id.deleteall);\r\n        deleteone=(Button)findViewById(R.id.deleteone);\r\n        selectone=(Button)findViewById(R.id.selectone);\r\n        updateone=(Button)findViewById(R.id.updateone);\r\n\r\n        final ListView lv1=(ListView)findViewById(R.id.lv1);\r\n        final List<String> list=new ArrayList<String>();\r\n        final ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,R.layout.list_item, list );\r\n\r\n        db=new DBAdapter(this);\r\n        db.open();\r\n\r\n        addone.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                People people=new People();\r\n                people.Name=e1.getText().toString();\r\n                people.Age=Integer.parseInt(e2.getText().toString());\r\n                people.Height=Float.parseFloat(e3.getText().toString());\r\n                db.insert(people);\r\n                String s=\"添加成功！\";\r\n                list.add(s);\r\n                lv1.setAdapter(adapter);\r\n            }\r\n        });\r\n\r\n        showall.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                list.clear();\r\n                People[] peoples=db.getAllData();\r\n                if(peoples==null)\r\n                {\r\n                    String s=\"数据库为空！！\";\r\n                    list.add(s);\r\n                    lv1.setAdapter(adapter);\r\n                }\r\n                else{\r\n                    for(int i=0;i<peoples.length;i++)\r\n                    {\r\n                        People people=peoples[i];\r\n                        list.add(people.toString());\r\n                        lv1.setAdapter(adapter);\r\n                    }\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        selectone.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                list.clear();\r\n                People[] peoples=db.getOneData(Long.parseLong(e4.getText().toString()));\r\n                if(peoples==null)\r\n                {\r\n                    String s=\"没有找到相应的数据！！\";\r\n                    list.add(s);\r\n                    lv1.setAdapter(adapter);\r\n                }\r\n                else{\r\n                    list.add(peoples[0].toString());\r\n                    lv1.setAdapter(adapter);\r\n                }\r\n            }\r\n        });\r\n\r\n        deleteone.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                list.clear();\r\n                People[] peoples=db.getOneData(Long.parseLong(e4.getText().toString()));\r\n                if(peoples==null)\r\n                {\r\n                    String s=\"没有找到相应的数据！！\";\r\n                    list.add(s);\r\n                    lv1.setAdapter(adapter);\r\n                }\r\n                else{\r\n                    db.deleteOneData(Long.parseLong(e4.getText().toString()));\r\n                }\r\n            }\r\n        });\r\n        deleteall.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                db.deleteAllData();\r\n                adapter.clear();\r\n                adapter.notifyDataSetChanged() ;\r\n            }\r\n        });\r\n        updateone.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                list.clear();\r\n                People[] peoples=db.getOneData(Long.parseLong(e4.getText().toString()));\r\n                if(peoples==null)\r\n                {\r\n                    String s=\"没有找到相应的数据！！\";\r\n                    list.add(s);\r\n                    lv1.setAdapter(adapter);\r\n                }\r\n                else{\r\n                    People people=peoples[0];\r\n                    people.Name=e1.getText().toString();\r\n                    people.Age=Integer.parseInt(e2.getText().toString());\r\n                    people.Height=Float.parseFloat(e3.getText().toString());\r\n                    db.updateOneData(Long.parseLong(e4.getText().toString()),people);\r\n                }\r\n            }\r\n        });\r\n        clearshow.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                adapter.clear();\r\n                adapter.notifyDataSetChanged() ;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n```\r\n\r\n\r\nPeople.java\r\n```java\r\n\r\npublic class People {\r\n    public int ID = -1;\r\n    public String Name;\r\n    public int Age;\r\n    public float Height;\r\n\r\n    @Override\r\n    public String toString() {\r\n        String result=\"\";\r\n        result += \"ID:\" + this.ID + \",\";\r\n        result += \"姓名:\" + this.Name + \",\";\r\n        result += \"年龄:\" + this.Age + \",\";\r\n        result += \"身高:\" + this.Height;\r\n        return result;\r\n    }\r\n}\r\n\r\n```\r\nactivity_main.xml\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:layout_editor_absoluteX=\"0dp\"\r\n    tools:layout_editor_absoluteY=\"81dp\">\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/linearLayout\"\r\n        android:layout_width=\"370dp\"\r\n        android:layout_height=\"200dp\"\r\n        android:layout_marginEnd=\"6dp\"\r\n        android:layout_marginStart=\"6dp\"\r\n        android:layout_marginTop=\"8dp\"\r\n        android:orientation=\"vertical\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        tools:layout_constraintLeft_creator=\"1\"\r\n        tools:layout_constraintRight_creator=\"1\"\r\n        tools:layout_constraintTop_creator=\"1\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"370dp\"\r\n            android:layout_height=\"50dp\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <TextView\r\n                android:layout_width=\"35dp\"\r\n                android:layout_height=\"29dp\"\r\n                android:text=\"姓名:\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/name\"\r\n                android:layout_width=\"100dp\"\r\n                android:layout_height=\"40dp\" />\r\n\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"370dp\"\r\n            android:layout_height=\"50dp\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <TextView\r\n                android:layout_width=\"35dp\"\r\n                android:layout_height=\"29dp\"\r\n                android:text=\"年龄:\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/age\"\r\n                android:layout_width=\"100dp\"\r\n                android:layout_height=\"40dp\" />\r\n            <Button\r\n                android:layout_width=\"80dp\"\r\n                android:layout_height=\"40dp\"\r\n                android:text=\"添加数据\"\r\n                android:id=\"@+id/addone\" />\r\n            <Button\r\n                android:layout_width=\"80dp\"\r\n                android:layout_height=\"40dp\"\r\n                android:text=\"全部显示\"\r\n                android:id=\"@+id/showall\" />\r\n\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"370dp\"\r\n            android:layout_height=\"50dp\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <TextView\r\n                android:layout_width=\"35dp\"\r\n                android:layout_height=\"29dp\"\r\n                android:text=\"身高:\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/height\"\r\n                android:layout_width=\"100dp\"\r\n                android:layout_height=\"40dp\" />\r\n            <Button\r\n                android:layout_width=\"80dp\"\r\n                android:layout_height=\"40dp\"\r\n                android:text=\"清除显示\"\r\n                android:id=\"@+id/clearshow\" />\r\n            <Button\r\n                android:layout_width=\"80dp\"\r\n                android:layout_height=\"40dp\"\r\n                android:text=\"全部删除\"\r\n                android:id=\"@+id/deleteall\" />\r\n\r\n        </LinearLayout>\r\n        <LinearLayout\r\n        android:layout_width=\"370dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:orientation=\"horizontal\">\r\n        <TextView\r\n            android:layout_width=\"20dp\"\r\n            android:layout_height=\"29dp\"\r\n            android:text=\"ID:\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/ID\"\r\n            android:layout_width=\"50dp\"\r\n            android:layout_height=\"40dp\" />\r\n        <Button\r\n            android:id=\"@+id/deleteone\"\r\n            android:layout_width=\"80dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:text=\"ID删除\" />\r\n\r\n         <Button\r\n            android:id=\"@+id/selectone\"\r\n            android:layout_width=\"80dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:text=\"ID查询\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/updateone\"\r\n            android:layout_width=\"80dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:text=\"ID更新\" />\r\n        </LinearLayout>\r\n\r\n    </LinearLayout>\r\n\r\n    <ListView\r\n        android:id=\"@+id/lv1\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:longClickable=\"true\"\r\n        />\r\n</LinearLayout>\r\n\r\n```\r\n\r\nlist_item.xml\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n    <TextView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n        android:id=\"@+id/text\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_gravity=\"center_vertical\"\r\n        android:textColor=\"#0000FF\"\r\n        android:textSize=\"16dp\" />\r\n\r\n\r\n```', '2018-11-19 16:38:56', '2018-11-21 13:21:27', null, '1');
INSERT INTO `article` VALUES ('16', 'Android Service', 'Android', null, null, null, 'zhaoxuyang', '# Android Service\r\n\r\n[TOC]\r\n\r\n## 秒表\r\n\r\nMainActivity.java\r\n```\r\n\r\nimport android.content.Intent;\r\nimport android.os.Handler;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    private static Handler handle = new Handler();\r\n\r\n    private static long third;\r\n    static TextView hour;\r\n    static TextView minute;\r\n    static TextView miao;\r\n    Button start;\r\n    Button stop;\r\n    Button qingling;\r\n\r\n    public static void Update(long ms){\r\n\r\n        third=ms;\r\n        handle.post(RefreshLable);\r\n    }\r\n\r\n    private static Runnable RefreshLable = new Runnable(){\r\n        @Override\r\n        public void run(){\r\n            //hour.setText(String.valueOf(first));\r\n            //minute.setText(String.valueOf(second));4\r\n            //miao.setText(String.valueOf(third));\r\n            if(third<6000)\r\n            {\r\n                if(third<100)\r\n                    miao.setText(Long.toString(third));\r\n                else{\r\n                    miao.setText(Long.toString(third%100));\r\n                    minute.setText(Long.toString(third/100));\r\n                }\r\n                //数字转换字符串\r\n\r\n            }\r\n            else\r\n            {\r\n                hour.setText(Long.toString(third/6000));\r\n                minute.setText(Long.toString((third%6000)/100));\r\n                miao.setText(Long.toString((third%6000)%100));\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        hour=(TextView)findViewById(R.id.textView2);\r\n        minute=(TextView)findViewById(R.id.textView4);\r\n        miao=(TextView)findViewById(R.id.textView6);\r\n        qingling=(Button)findViewById(R.id.button4);\r\n        start=(Button)findViewById(R.id.button5);\r\n        stop=(Button)findViewById(R.id.button6);\r\n        final Intent serviceIntent=new Intent(this,MainService.class);\r\n\r\n        qingling.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                stopService(serviceIntent);\r\n                hour.setText(\"00\");\r\n                minute.setText(\"00\");\r\n                miao.setText(\"00\");\r\n\r\n            }\r\n        });\r\n\r\n        start.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                startService(serviceIntent);\r\n            }\r\n        });\r\n\r\n        stop.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                stopService(serviceIntent);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n```\r\n\r\nMainService.java\r\n\r\n```java\r\n\r\nimport android.app.Service;\r\nimport android.content.Intent;\r\nimport android.os.IBinder;\r\n\r\npublic class MainService extends Service {\r\n    private Thread workthread;\r\n    private long ms, ms0;\r\n    private int ts1, ts2;\r\n    private boolean isstart = false;\r\n\r\n\r\n    @Override\r\n    public IBinder onBind(Intent intent) {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate() {\r\n        super.onCreate();\r\n        workthread = new Thread(null, backgroundWork, \"workthread\");\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStart(Intent intent, int startId) {\r\n        super.onStart(intent, startId);\r\n        if (!workthread.isAlive()) {\r\n            workthread.start();\r\n            ms = System.currentTimeMillis();\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onDestroy() {\r\n        super.onDestroy();\r\n        workthread.interrupt();\r\n    }\r\n\r\n    private Runnable backgroundWork = new Runnable() {\r\n        @Override\r\n        public void run() {\r\n            try {\r\n                while (!workthread.interrupted()) {\r\n                    ms0 = (System.currentTimeMillis() - ms) / 10;\r\n                    MainActivity.Update(ms0);\r\n                    Thread.sleep(10);\r\n                }\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n        }\r\n    };\r\n}\r\n\r\n```\r\n\r\nactivity_main.xml\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout  xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:layout_marginTop=\"25dp\"\r\n            android:text=\"秒表\"\r\n            android:textColor=\"#000000\"\r\n            android:textSize=\"30dp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView2\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignBaseline=\"@+id/textView3\"\r\n            android:layout_alignBottom=\"@+id/textView3\"\r\n            android:layout_toStartOf=\"@+id/textView3\"\r\n            android:text=\"00\"\r\n            android:textColor=\"#000000\"\r\n            android:textSize=\"30dp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView4\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/textView\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:layout_marginTop=\"14dp\"\r\n            android:text=\"00\"\r\n            android:textColor=\"#000000\"\r\n            android:textSize=\"30dp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView6\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignBaseline=\"@+id/textView5\"\r\n            android:layout_alignBottom=\"@+id/textView5\"\r\n            android:layout_toEndOf=\"@+id/textView5\"\r\n            android:text=\"00\"\r\n            android:textColor=\"#000000\"\r\n            android:textSize=\"30dp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView3\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignBaseline=\"@+id/textView4\"\r\n            android:layout_alignBottom=\"@+id/textView4\"\r\n            android:layout_toStartOf=\"@+id/textView4\"\r\n            android:text=\":\"\r\n            android:textColor=\"#000000\"\r\n            android:textSize=\"30dp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView5\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignBaseline=\"@+id/textView4\"\r\n            android:layout_alignBottom=\"@+id/textView4\"\r\n            android:layout_toEndOf=\"@+id/textView4\"\r\n            android:text=\":\"\r\n            android:textColor=\"#000000\"\r\n            android:textSize=\"30dp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"230dp\"\r\n            android:layout_height=\"60dp\"\r\n            android:layout_below=\"@+id/textView2\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:layout_marginTop=\"17dp\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <Button\r\n                android:id=\"@+id/button4\"\r\n                android:layout_width=\"70dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"清零\"\r\n                android:textSize=\"20dp\"/>\r\n\r\n            <Button\r\n                android:id=\"@+id/button5\"\r\n                android:layout_width=\"70dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"10dp\"\r\n                android:text=\"计时\"\r\n                android:textSize=\"20dp\"/>\r\n\r\n            <Button\r\n                android:id=\"@+id/button6\"\r\n                android:layout_width=\"70dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"10dp\"\r\n                android:text=\"停止\"\r\n                android:textSize=\"20dp\"/>\r\n\r\n        </LinearLayout>\r\n\r\n\r\n    </RelativeLayout>\r\n</LinearLayout>\r\n\r\n```\r\n在 AndroidManifest.xml 中注册service：\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.zxy97.sqlite\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n        <activity android:name=\".MainActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <service\r\n            android:name=\".MainService\"\r\n            android:enabled=\"true\"\r\n            android:exported=\"true\">\r\n        </service>\r\n    </application>\r\n</manifest>\r\n```', '2018-11-21 13:38:31', '2018-11-21 13:38:31', null, '1');
INSERT INTO `article` VALUES ('17', 'Android 复习总结', 'Android', null, null, null, 'zhaoxuyang', '# Android 知识总结\r\n\r\n[TOC]\r\n\r\n## Android 简介\r\n\r\n### Android 特征\r\n\r\n\r\n### Andoroid 体系结构\r\n\r\n> 第一层 Linux内核\r\n> 第二层 中间件层\r\n> 第三层 应用程序框架层\r\n> 第四层 应用程序层\r\n\r\n## Android 开发环境\r\n\r\n### 开发工具\r\n\r\n> Android 模拟器\r\n> Android 调试桥（ADB）\r\n> DDMS 调试工具：进程程序调试和错误定位\r\n\r\n\r\n## 第一个Android程序\r\n\r\n### Android 程序结构\r\n- src：源代码目录\r\n- gen：ADT自动生成的java文件，例如R.java\r\n- assets：原始格式的文件，不能被R.java读取\r\n- bin：编译过程中产生的文件，以及最终的apk\r\n- res ：资源目录\r\n	- drawable-hdpi：\r\n	- drawable-mdpi：\r\n	- drawable-ldpi：\r\n	- layout：\r\n	- values：\r\n\r\n### AndroidMainifest.xml\r\n\r\n根元素是mainifest，包含xmlns:android、package、android:versionCode、android:versionName\r\n\r\n## Android 生命周期\r\n### Android 四大组件\r\n- Activity\r\n- service\r\n- Broadcase receiver\r\n- Content provider\r\n\r\n### 生命周期的4种状态\r\n- 活动状态\r\n- 暂停状态\r\n- 停止状态\r\n- 非活动状态\r\n\r\n### 生命周期中事件的7种回调函数\r\n- onCreate\r\n- onStart\r\n- OnRestart\r\n- OnPause\r\n- onStop\r\n- onResume\r\n- onDestroy\r\n\r\n## Android 用户界面\r\n### Android界面的两大特征\r\n- 视图树\r\n- 单线程用户界面\r\n\r\n### 界面布局\r\n- 线性布局\r\n- 表格布局\r\n- 框架布局\r\n- 绝对布局\r\n- 相对布局\r\n- 网格布局\r\n\r\n### 菜单\r\n- 选项菜单\r\n- 子菜单\r\n- 快捷菜单\r\n\r\n## 组件通信与广播消息\r\n### Intent简介\r\n> 轻量级的消息传递机制\r\n- 将一个组件的数据传递给另一个组件\r\n- 在Android系统发布广播消息\r\n\r\n启动Intent分为显式和隐式\r\n\r\n### Intent过滤器\r\n```xml\r\n<intent-filter>\r\n	<action></action>\r\n	<category></category>\r\n	<data android></data>\r\n</intent-filter>\r\n```\r\n\r\n### 广播消息\r\n发送广播消息：\r\n```java\r\nString UNIQUE_STRING = \"com.zxy97.Broadcasereceiver\";\r\nIntent intent = new Intent(UNIQUE_STRING);\r\nintent.putExtra(\"key\",\"value\");\r\nsendBroadcase(intent);\r\n```\r\n\r\n接受广播消息：\r\n```xml\r\n<recevier android:name=\".MyBroadcaseReceiver\">\r\n	<intent-filter>\r\n		<action android:name=\"com.zxy97.Broadcasereceiver\" />\r\n	</intent-filter>\r\n</recevier>\r\n```\r\n\r\n```java\r\npublic class A extends BroadcaseReceiver {\r\n	@Override\r\n	public void onReceive (Context context, Intent intent) {\r\n		String msg = intent.getStringExtra(\"key\");\r\n		Toast.makeText(context, msg, Toast.LENGTH_SHORT).show();\r\n	}\r\n}\r\n```\r\n\r\n## 后台服务\r\n### Service 的启动方式\r\n- 启动方式\r\n> 通过Context.startService()\r\n- 绑定方式\r\n\r\n```java\r\npublic class RandomService extends Service {\r\n	@Override\r\n	public IBinde onBind (Intent intent) {\r\n		return null;\r\n	}\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n', '2018-11-22 12:01:05', '2018-11-22 12:36:16', null, '1');
INSERT INTO `article` VALUES ('18', 'biaoti', 'aas', 'asas', null, null, 'zhaoxuyang', 'ass', '2018-11-28 23:42:06', null, '2018-11-28 23:54:33', '0');
INSERT INTO `article` VALUES ('19', 'zxy97博客', 'zxy97.com', '', null, null, 'zhaoxuyang', 'zxy97博客\r\n\r\n[TOC]', '2018-11-28 23:44:24', null, '2018-11-29 00:02:31', '0');
INSERT INTO `article` VALUES ('20', '新标题', '', '', null, null, 'zhaoxuyang', 'a\'a', '2018-11-29 00:04:57', null, '2018-11-29 00:05:03', '0');
INSERT INTO `article` VALUES ('21', '新标题', 'asss', '', null, null, 'zhaoxuyang', 'asas', '2018-11-29 00:11:24', '2018-11-29 00:22:42', '2018-11-29 00:22:56', '0');

-- ----------------------------
-- Table structure for `author`
-- ----------------------------
DROP TABLE IF EXISTS `author`;
CREATE TABLE `author` (
  `username` varchar(20) NOT NULL COMMENT '作者的用户名，唯一标识',
  `gmt_create` varchar(19) NOT NULL,
  `gmt_update` varchar(19) DEFAULT NULL,
  `gmt_delete` varchar(19) DEFAULT NULL,
  `nickname` varchar(20) DEFAULT NULL COMMENT '作者的昵称',
  `password` varchar(20) NOT NULL COMMENT '作者的登录密码',
  PRIMARY KEY (`username`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of author
-- ----------------------------
INSERT INTO `author` VALUES ('1395359719', '2018-11-27 18:32:37', null, null, null, '1395359719');
INSERT INTO `author` VALUES ('21', '2018-11-27 21:27:45', null, null, null, '123456');
INSERT INTO `author` VALUES ('taoyuan', '2018-11-27 19:07:59', null, null, null, 'taoyuan');
INSERT INTO `author` VALUES ('zhaoxuyang', '2018-11-27 18:08:36', null, null, '赵栩旸', 'zhaoxuyang');

-- ----------------------------
-- Table structure for `comment`
-- ----------------------------
DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `gmt_create` varchar(19) NOT NULL COMMENT '创建时间',
  `gmt_update` varchar(19) NOT NULL COMMENT '修改时间',
  `gmt_delete` varchar(19) NOT NULL COMMENT '删除时间',
  `content` text NOT NULL COMMENT '评论内容',
  `article_id` int(11) unsigned NOT NULL COMMENT '被评论的文章ID',
  `author_username` varchar(20) NOT NULL COMMENT '评论者ID',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of comment
-- ----------------------------

-- ----------------------------
-- Table structure for `reply`
-- ----------------------------
DROP TABLE IF EXISTS `reply`;
CREATE TABLE `reply` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `gmt_create` varchar(19) NOT NULL COMMENT '创建时间',
  `gmt_update` varchar(19) DEFAULT NULL COMMENT '修改时间',
  `gmt_delete` varchar(19) DEFAULT NULL COMMENT '删除时间',
  `content` text NOT NULL COMMENT '回复的内容',
  `comment_id` varchar(19) NOT NULL COMMENT '被回复的评论ID',
  `author_username` varchar(20) NOT NULL COMMENT '回复的作者的用户名',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of reply
-- ----------------------------
