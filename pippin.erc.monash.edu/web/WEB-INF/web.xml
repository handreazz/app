<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.1" xmlns="http://xmlns.jcp.org/xml/ns/javaee" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee 
    http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd">

    <!-- 之所以将web.xml放在这里是怕覆盖已有web.xml。
         如果您未配置web.xml，将本文件放到WEB-INF目录下即可。
         如果您已配置web.xml，将本文件的内容选择性地放到web.xml中即可。-->

    <!-- 配置 springIOC -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <context-param>  
        <param-name>contextConfigLocation</param-name>  
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>

    <!-- SpringMVC核心控制器 -->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc-servlet.xml</param-value>
        </init-param>
        <!--优先级-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!-- 字符编码过滤器，默认为UTF-8编码 -->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 增加 put 和 delete 的 HTTP方法 -->
    <filter>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 配置网站首页 -->
    <welcome-file-list>
        <welcome-file>redirect.jsp</welcome-file>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

    <!-- 如果超过以下时间无操作，则注销会话，单位为分钟 -->
    <session-config>
        <session-timeout>
            60
        </session-timeout>
    </session-config>

<!--
    <jsp-config>
        <taglib>
            <taglib-uri>constants</taglib-uri>
            <taglib-location>/WEB-INF/constants.tld</taglib-location>
        </taglib>
    </jsp-config>

-->
    <!-- 默认的错误处理页面 -->
    
    <!-- 无权限 -->
    <error-page>
        <error-code>403</error-code>
        <location>/page/error/403.jsp</location>
    </error-page>

    <!-- 页面不存在 -->
    <error-page>
        <error-code>404</error-code>
        <location>/page/error/404.jsp</location>
    </error-page>
    <!-- 仅仅在调试的时候注视掉,在正式部署的时候不能注释 -->
    <!-- 这样配置也是可以的，表示发生500错误的时候，转到500.jsp页面处理。 -->

    <!-- 服务器内容错误 -->
<!--
    <error-page>
        <error-code>500</error-code>
        <location>/page/error/500.jsp</location>
    </error-page>
-->

    <!-- 这样的配置表示如果jsp页面或者servlet发生java.lang.Exception类型（当然包含子类）的异常就会转到500.jsp页面处理。 -->
<!-- 
    <error-page> 
        <exception-type>java.lang.Exception</exception-type>
        <location>/page/error/500.jsp</location>
    </error-page>
    <error-page>
        <exception-type>java.lang.Throwable</exception-type>
        <location>/page/error/500.jsp</location>
    </error-page>
-->
<!-- 
   当error-code和exception-type都配置时，exception-type配置的页面优先级高
   及出现500错误，发生异常Exception时会跳转到500.jsp
-->

</web-app>

<!--
以下是我向大家推荐的jar包

文件上传（可选）：
commons-fileupload-1.3.2.jar
commons-io-2.5.jar

JSTL标签库（可选）：
jstl.jar
standard.jar

测试框架（可选）：
junit-4.9.jar
spring-test-4.0.1.RELEASE

邮件发送（可选）：
mail.jar

MyBatis（必选）：
mybatis-3.2.7.jar
mysql-connector-java-5.1.8-bin.jar

Spring).append(SpringMVC（必选）：
org-apache-commons-logging.jar
spring-aop-4.0.1.RELEASE.jar
spring-beans-4.0.1.RELEASE.jar
spring-context-4.0.1.RELEASE.jar
spring-core-4.0.1.RELEASE.jar
spring-expression-4.0.1.RELEASE.jar
spring-web-4.0.1.RELEASE.jar
spring-webmvc-4.0.1.RELEASE.jar
-->